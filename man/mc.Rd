% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mc.R
\name{mc}
\alias{mc}
\title{Monte Carlo with Tie-Breaker}
\usage{
mc(y, statistic, ..., dgp = function(y) sample(y, replace = TRUE), N = 99,
  type = c("geq", "leq", "absolute", "two-tailed"))
}
\arguments{
\item{y}{A vector or data frame.}

\item{statistic}{A function or a character string. Specifies
how the statistic is computed. The function inputs the
\code{y}, and outputs a scalar numeric.}

\item{...}{Other named arguments for statistic which are
passed unchanged each time it is called}

\item{dgp}{A function. The function inputs the first argument
\code{y}, and outputs a simulated \code{y} (i.e. an object
of the same type as \code{y}). It is analogous to the data
generating process under the null. Default value is
sample(y, replace = TRUE), the bootstrap resampling of
 \code{y}.}

\item{N}{An atomic vector. Number of replication of test
statistic.}

\item{type}{A character string. Specifies the type of test
the p-value function produce. The possible values are
\code{geq}, \code{leq}, \code{absolute} and \code{two-tailed}.
 Default is \code{geq}.}
}
\value{
The returned value if an object of class "mc",
containing the following components:
 \item{S0}{Observed value of \code{statistic}}
 \item{pval}{Monte Carlo p-value of \code{statistic}}
 \item{y}{Data specified in call}
 \item{statistic}{\code{statistic} function specified in call}
 \item{dgp}{\code{dgp} function specified in call}
 \item{N}{Number of replication specified in call}
 \item{type}{\code{type} of p-value specified in call}
 \item{call}{Original call to \code{mmc}}
 \item{seed}{value of \code{.Random.seed} at the start of
 \code{mc} call}
}
\description{
Generates N Monte Carlo replicates of a statistic applied to
data.
}
\details{
The \code{ran.gen} function defined by the user is used to
generate new observations in order to compute the simulated
statistics.

Then \code{\link{pvalue}} is applied to the statistic and
its simulated values. \code{\link{pvalue}} computes the
p-value by ranking the statistic compared to its simulated
values. Ties in the ranking are broken according to a uniform
distribution.

We allow for three-type of tests: \code{one-tailed},
\code{absolute}, \code{two-tailed}. The \code{one-tailed}
test simply returns the p-value of the statistic at the right
end of the distribution. If the statistic is symmetric, one
can use the absolute value of the statistic and its simulated
value to retrieve a two-tailed test. If the statistic is not
symmetric, one can specify the type as \code{two-tailed} to
obtained the p-value computed at both end of the distribution.
}
\examples{
## Example 1
## Kolmogorov-Smirnov Test using Monte Carlo

# Set seed
set.seed(123)

# Generate sample data
y <- rgamma(8, shape = 2, rate = 1)

# Set data generating process function
dgp <- function(y)  rgamma(length(y), shape = 2, rate = 1)

# Set the Kolomogorov-Smirnov test for gamma distribution
statistic <- function(y){
    out <- ks.test(y, "pgamma", shape = 2, rate = 1)
    return(out$statistic)
}

# Apply the MC test with tie-breaker
mc(y, statistic = statistic, dgp = dgp, N = 999, type = "geq")

}

